 
# Form implementation generated from reading ui file 'Security_Tool3.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import subprocess, re, socket, netifaces as ni, requests
import platform, sys
from datetime import datetime

os_name = platform.system()
os_version = platform.version()

class Ui_Form(object):

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 312)
        Form.setStyleSheet("")
        self.tabWidget = QtWidgets.QTabWidget(Form)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 401, 312))
        self.tabWidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.tabWidget.setStyleSheet("/** MAIN SECTION **/\n"
                                    "QWidget {\n"
                                    "    background-color: #404258;\n"
                                    "    color: #fff;\n"
                                    " }\n"
                                    "QTabWidget {\n"
                                    "    background: #404258;\n"
                                    "    border-color: #BFE7FF;\n"
                                    "}\n"
                                    "/** PUSH BUTTON SECTION **/\n"
                                    " QPushButton {\n"
                                    "    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #404258, stop: 1 #6B728E);\n"
                                    "    border-radius: 6px;\n"
                                    "    padding: 5px;\n"
                                    "    color: white;\n"
                                    "    font-weight: bold;\n"
                                    "}\n"
                                    "QPushButton:hover {;\n"
                                    "    border: 1px solid;\n"
                                    "    border-color: #fff;\n"
                                    " }\n"
                                    "QPushButton:pressed {\n"
                                    "    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #6B728E, stop: 1 #404258);\n"
                                    "}\n"
                                    "/** TAB BAR SECTION **/\n"
                                    "QTabBar:tab { \n"
                                    "    background: #474E68;\n"
                                    "    color: #fff; padding: 10px; \n"
                                    "}\n"
                                    "QTabBar:tab:hover {\n"
                                    "    background: #50577A;\n"
                                    "}\n"
                                    "QTabBar:tab:selected { \n"
                                    "    background: #6B728E; \n"
                                    "}\n"
                                    "/** LINE EDIT SECTION **/\n"
                                    "QLineEdit {\n"
                                    "    border: 1px solid;\n"
                                    "    border-color: #50577A;\n"
                                    "    background-color: #6B728E;\n"
                                    "}\n"
                                    "QLineEdit:focus {\n"
                                    "    background: #7B8FA1;\n"
                                    "    border: 2px solid;\n"
                                    "    border-color: #50577A;\n"
                                    "}\n"
                                    "/** TEXT BROWSER SECTION **/\n"
                                    "QTextBrowser {\n"
                                    "    border: 2px solid;\n"
                                    "    border-color: #50577A;\n"
                                    "    background: #6B728E;\n"
                                    "}")


        ##################################################
        # Start - Tab 1 (Dashboard)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.TabPosition.West)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.pushButton = QtWidgets.QPushButton(self.tab)


        self.pushButton.setGeometry(QtCore.QRect(124, 40, 91, 24))
        self.pushButton.setObjectName("pushButton")

        self.t1_title = QtWidgets.QLabel(self.tab)
        self.t1_title.setGeometry(QtCore.QRect(130, 10, 81, 21))
        self.t1_title.setObjectName("t1_title")

        self.Computer_label = QtWidgets.QLabel(self.tab)
        self.Computer_label.setGeometry(QtCore.QRect(40, 90, 41, 41))
        self.Computer_label.setText("")
        self.Computer_label.setPixmap(QtGui.QPixmap("images/Computer.png"))
        self.Computer_label.setScaledContents(True)
        self.Computer_label.setObjectName("Computer_label")
        self.Gateway_Label = QtWidgets.QLabel(self.tab)
        self.Gateway_Label.setGeometry(QtCore.QRect(160, 90, 41, 41))
        self.Gateway_Label.setText("")
        self.Gateway_Label.setPixmap(QtGui.QPixmap("images/Gateway.png"))
        self.Gateway_Label.setScaledContents(True)
        self.Gateway_Label.setObjectName("Gateway_Label")
        self.Internet_Label = QtWidgets.QLabel(self.tab)
        self.Internet_Label.setGeometry(QtCore.QRect(280, 90, 41, 41))
        self.Internet_Label.setText("")
        self.Internet_Label.setPixmap(QtGui.QPixmap("images/Internet.png"))
        self.Internet_Label.setScaledContents(True)
        self.Internet_Label.setObjectName("Internet_Label")
        self.Computer_Name_Label = QtWidgets.QLabel(self.tab)
        self.Computer_Name_Label.setGeometry(QtCore.QRect(30, 70, 61, 16))
        self.Computer_Name_Label.setObjectName("Computer_Name_Label")
        self.Gateway_Name_Label = QtWidgets.QLabel(self.tab)
        self.Gateway_Name_Label.setGeometry(QtCore.QRect(130, 70, 101, 20))
        self.Gateway_Name_Label.setObjectName("Gateway_Name_Label")
        self.Internet_Name_Label = QtWidgets.QLabel(self.tab)
        self.Internet_Name_Label.setGeometry(QtCore.QRect(280, 70, 61, 16))
        self.Internet_Name_Label.setObjectName("Internet_Name_Label")

        self.IP_TextEdit = QtWidgets.QTextEdit(self.tab)
        self.IP_TextEdit.setGeometry(QtCore.QRect(10, 140, 101, 41))
        self.IP_TextEdit.setObjectName("IP_TextEdit")

        self.Gateway_LineEdit_2 = QtWidgets.QTextEdit(self.tab)
        self.Gateway_LineEdit_2.setGeometry(QtCore.QRect(130, 140, 101, 41))
        self.Gateway_LineEdit_2.setObjectName("Gateway_LineEdit_2")

        self.Internet_LineEdit_3 = QtWidgets.QTextEdit(self.tab)
        self.Internet_LineEdit_3.setGeometry(QtCore.QRect(250, 140, 101, 41))
        self.Internet_LineEdit_3.setObjectName("Internet_LineEdit_3")


        icon1 = QtGui.QIcon(QtGui.QPixmap("images/speedometer2.svg").transformed(QtGui.QTransform().rotate(90)))
        self.tabWidget.addTab(self.tab, icon1, "")

        ### Button Connections
        self.pushButton.clicked.connect(self.update_dasboard)   # Function to run when clicked

        # End - Tab 1 (Dashboard)
        ##################################################


        ##################################################
        # Start - TAB 2 (Network Details)
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")

        self.label_10 = QtWidgets.QLabel(self.tab_2)
        self.label_10.setGeometry(QtCore.QRect(110, 10, 131, 21))
        self.label_10.setObjectName("label_10")

        self.label_11 = QtWidgets.QLabel(self.tab_2)
        self.label_11.setGeometry(QtCore.QRect(10, 70, 61, 21))
        self.label_11.setObjectName("label_11")

        self.Network_Details_Result = QtWidgets.QTextBrowser(self.tab_2)
        self.Network_Details_Result.setGeometry(QtCore.QRect(10,100, 341, 201))
        # self.Network_Details_Result.setGeometry(QtCore.QRect(10, 100, 341, 201))
                                                            #10,100, 341, 201 Original
                                                            #10, 100, 161, 201
        self.Network_Details_Result.setObjectName("Network_Details_Result")


        # self.Network_Details_Result2 = QtWidgets.QTextBrowser(self.tab_2)
        # self.Network_Details_Result2.setGeometry(QtCore.QRect(190, 100, 161, 201))
        #                                                     #10,100, 341, 201
        #                                                     #10, 100, 161, 201
        # self.Network_Details_Result2.setObjectName("Network_Details_Result2")
        #                                                     # 190, 100, 161, 201

        self.Get_Network_Details = QtWidgets.QPushButton(self.tab_2)
        self.Get_Network_Details.setGeometry(QtCore.QRect(250, 60, 101, 24))
        self.Get_Network_Details.setObjectName("Get_Network_Details")

        self.Redo = QtWidgets.QLabel(self.tab_2)
        self.Redo.setGeometry(QtCore.QRect(220, 60, 21, 21))
        self.Redo.setText("")
        self.Redo.setPixmap(QtGui.QPixmap("images/Redo.png"))
        self.Redo.setScaledContents(True)
        self.Redo.setObjectName("Redo")


        icon2 = QtGui.QIcon(QtGui.QPixmap("images/ethernet.svg").transformed(QtGui.QTransform().rotate(90)))
        self.tabWidget.addTab(self.tab_2, icon2, "")


        ### Button Connections
        self.Get_Network_Details.clicked.connect(self.update_field)   # Function to run when clicked
        # End - Tab 2 (Network Details)
        ##################################################


        ##################################################
        # Start - Tab 3 (Network Scanning)
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.network_scan_btn = QtWidgets.QPushButton(self.tab_3)
        self.network_scan_btn.setGeometry(QtCore.QRect(260, 60, 91, 24))
        self.network_scan_btn.setObjectName("network_scan_btn")


        self.label = QtWidgets.QLabel(self.tab_3)
        self.label.setGeometry(QtCore.QRect(10, 30, 61, 21))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.tab_3)
        self.label_2.setGeometry(QtCore.QRect(110, 0, 111, 31))
        self.label_2.setObjectName("label_2")
        self.network_lineEdit = QtWidgets.QLineEdit(self.tab_3)
        self.network_lineEdit.setGeometry(QtCore.QRect(10, 60, 221, 22))
        self.network_lineEdit.setObjectName("lineEdit")
        self.Network_Scan_Result = QtWidgets.QTextBrowser(self.tab_3)
        self.Network_Scan_Result.setGeometry(QtCore.QRect(10, 100, 341, 192))
        self.Network_Scan_Result.setObjectName("Network_Scan_Result")
        self.Network_Scan_Result.setText("Please be patient this will take some time to complete.")

        icon3 = QtGui.QIcon(QtGui.QPixmap("images/hdd-network-fill.svg").transformed(QtGui.QTransform().rotate(90)))
        self.tabWidget.addTab(self.tab_3,  icon3, "")

        ### Button Connections
        self.network_scan_btn.clicked.connect(self.update_network_scan)   # Function to run when clicked
        # End - Tab 3 (Network Scanning)
        ##################################################


        ##################################################
        # Start - Tab 4 (Port Scanning)
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.host_lineEdit_2 = QtWidgets.QLineEdit(self.tab_4)
        self.host_lineEdit_2.setGeometry(QtCore.QRect(50, 40, 211, 22))
        self.host_lineEdit_2.setObjectName("host_lineEdit_2")

        self.port_lineEdit_3 = QtWidgets.QLineEdit(self.tab_4)
        self.port_lineEdit_3.setGeometry(QtCore.QRect(50, 70, 101, 22))
        self.port_lineEdit_3.setObjectName("port_lineEdit_3")

        self.port_lineEdit_4 = QtWidgets.QLineEdit(self.tab_4)
        self.port_lineEdit_4.setGeometry(QtCore.QRect(160, 70, 101, 22))
        self.port_lineEdit_4.setObjectName("port_lineEdit_4")

        self.port_scan_btn = QtWidgets.QPushButton(self.tab_4)
        self.port_scan_btn.setGeometry(QtCore.QRect(280, 70, 75, 24))
        self.port_scan_btn.setObjectName("port_scan_btn")

        self.Port_Scan_Result = QtWidgets.QTextBrowser(self.tab_4)
        self.Port_Scan_Result.setGeometry(QtCore.QRect(10, 100, 341, 201))
        self.Port_Scan_Result.setObjectName("Port_Scan_Result")

        self.label_3 = QtWidgets.QLabel(self.tab_4)
        self.label_3.setGeometry(QtCore.QRect(130, 11, 71, 20))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.tab_4)
        self.label_4.setGeometry(QtCore.QRect(11, 39, 25, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.tab_4)
        self.label_5.setGeometry(QtCore.QRect(11, 68, 35, 16))
        self.label_5.setObjectName("label_5")
        icon4 = QtGui.QIcon(QtGui.QPixmap("images/PortScan.svg").transformed(QtGui.QTransform().rotate(90)))
        self.tabWidget.addTab(self.tab_4, icon4, "")


        ### Button Connections
        self.port_scan_btn.clicked.connect(self.update_port_scan)   # Function to run when clicked
        # End - Tab 4 (Port Scanning)
        ##################################################


        ##################################################
        # Start - Tab 5 (Ping Destinatior)
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.Ping_Status_Result = QtWidgets.QTextBrowser(self.tab_5)
        self.Ping_Status_Result.setGeometry(QtCore.QRect(10, 110, 341, 192))
        self.Ping_Status_Result.setObjectName("Ping_Status_Result")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_4.setGeometry(QtCore.QRect(81, 43, 181, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_4.setGeometry(QtCore.QRect(279, 40, 71, 26))
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_8 = QtWidgets.QLabel(self.tab_5)
        self.label_8.setGeometry(QtCore.QRect(109, 10, 141, 2))
        self.label_8.setObjectName("label_8")
        self.label_6 = QtWidgets.QLabel(self.tab_5)
        self.label_6.setGeometry(QtCore.QRect(11, 37, 25, 16))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.tab_5)
        self.label_7.setGeometry(QtCore.QRect(11, 72, 32, 16))
        self.label_7.setObjectName("label_7")
        icon5 = QtGui.QIcon(QtGui.QPixmap("images/ear.svg").transformed(QtGui.QTransform().rotate(90)))
        self.tabWidget.addTab(self.tab_5, icon5, "")
        # Start - Tab 5 (Ping Destinatior)
        ##################################################


        ##################################################
        # Start - Tab 6 (UNKNOWN)
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        icon6 = QtGui.QIcon(QtGui.QPixmap("images/chat-right-dots.svg").transformed(QtGui.QTransform().rotate(90)))
        self.tabWidget.addTab(self.tab_6, icon6,  "")
        # Start - Tab 6 (UNKNOWN)
        ##################################################


        self.retranslateUi(Form)
        self.tabWidget.setCurrentIndex(0)  # Show the first tab when the program starts.
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton.setText(_translate("Form", "Get Local IP\'s"))
        self.t1_title.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:12pt;\">Dashboard</span></p></body></html>"))
        self.Computer_Name_Label.setText(_translate("Form", "Computer"))
        self.Gateway_Name_Label.setText(_translate("Form", "Gateway / Router"))
        self.Internet_Name_Label.setText(_translate("Form", "Internet"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Form", ""))

        self.label_10.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:12pt;\">Network Details</span></p></body></html>"))
        self.label_11.setText(_translate("Form", "Details"))
        self.Get_Network_Details.setText(_translate("Form", "Get Local Info"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Form", ""))

        self.network_scan_btn.setText(_translate("Form", "Scan Network"))
        self.label.setText(_translate("Form", "IP Range"))
        self.label_2.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:12pt;\">Network Scan</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("Form", ""))

        self.port_scan_btn.setText(_translate("Form", "Scan Ports"))
        self.label_3.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:12pt;\">Port Scan</span></p></body></html>"))
        self.label_4.setText(_translate("Form", "Host"))
        self.label_5.setText(_translate("Form", "Port(s)"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("Form", ""))

        self.pushButton_4.setText(_translate("Form", " Ping IP "))
        self.label_8.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:12pt;\">Ping Destination</span></p></body></html>"))
        self.label_6.setText(_translate("Form", "Host"))
        self.label_7.setText(_translate("Form", "Status"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("Form", ""))

        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("Form", ""))


    ##################################################
    # Start - Tab 1 - FUNCTION (update_dasboard)

    def update_dasboard(self):
        # os_name
        # os_version
        if os_name == 'Windows':
            ip_addr = socket.gethostbyname_ex(socket.getfqdn())[2][1]
            gateway = ni.gateways()[2][0][0]
            ip_external = requests.get("https://api.ipify.org").text
        elif os_name == 'Linux':
            ip_addr = subprocess.check_output("ip addr show | grep 'inet ' | awk '{print $2}' | cut -d/ -f1", shell=True).decode()
            gateway = subprocess.check_output("ip addr show | grep 'inet ' | awk '{print $4}' | cut -d/ -f1", shell=True).decode()
            ip_external = requests.get("https://api.ipify.org").text
        else:
            ip_addr = ''
            gateway = ''
            ip_external = ''


        self.IP_TextEdit.setText(str(ip_addr))
        self.Gateway_LineEdit_2.setText(str(gateway))
        self.Internet_LineEdit_3.setText(ip_external)

    # Start - Tab 1 - FUNCTION (update_dasboard)
    ##################################################

    ##################################################
    # Start - Tab 2 - FUNCTION (update_field)

    # Function: remove_input
    # Purpose: Function to delete the latest input and label
    # Inputs: self
    # Returns: None
    def update_field(self):
        # Update the greetings field
        # Grab the name filed and update label
        if os_name == 'Windows':
            data = subprocess.check_output(['ipconfig','/all']).decode('utf-8').split('\n')
        elif os_name == 'Linux':
            data = subprocess.check_output(['ip', 'route', 'show']).decode().split('\n')
        else:
            data = ''

        for item in data:
            # print(item)
            # matches for 4 variables (couldn't slim it down) then only use the first and last.
            # match = re.search(r'^([\w\s]+)(( \.+)+ :) (.*)', item)
            # if match:
            #     # # var1 = match.group(1)
            #     # self.Network_Details_Result.append(match.group(1))
            #     # # var2 = match.group(4)
            #     # self.Network_Details_Result2.append(match.group(4))
            #     self.Network_Details_Result.append(match.group(1).ljust(29) + match.group(4).rjust(29))
                # self.Network_Details_Result.append(match.group(1) + "\t" + match.group(4))
            self.Network_Details_Result.append(item[:58])

    # Start - Tab 2 - FUNCTION (update_field)
    ##################################################

    ##################################################
    # Start - Tab 3 - FUNCTION (update_network_scan)

    def update_network_scan(self):
        if self.network_lineEdit.text() == "":
            self.Network_Scan_Result.setPlainText("Address field is empy.\nTry google.com")
        else:
            print("running trace")
            self.Network_Scan_Result.setPlainText("running trace")
            self.network_scan_btn.setEnabled(False)
            if os_name == 'Windows':
                output = subprocess.run(['tracert', self.network_lineEdit.text()], capture_output=True)
            elif os_name == 'Linux':
                output = subprocess.run(['traceroute', self.network_lineEdit.text()], capture_output=True)
            else:
                output = ''

            print("Got output")
            self.Network_Scan_Result.setPlainText(output.stdout.decode())
            self.network_scan_btn.setEnabled(True)

    # def update_network_scan(self):
    #     if self.network_lineEdit.text() == "":
    #         self.Network_Scan_Result.setPlainText("Address field is empy.\nTry google.com")
    #     else:
    #         output = subprocess.run(['tracert', self.network_lineEdit.text()], capture_output=True)
    #         self.Network_Scan_Result.setPlainText(output.stdout.decode())

    # Start - Tab 3 - FUNCTION (update_network_scan)
    ##################################################

    ##################################################
    # Start - Tab 4 - FUNCTION (update_port_scan)

    def update_port_scan(self):
        # get the ip address
        print("Update: %s", self.host_lineEdit_2.text())
        # get the port
        print("Update: %s", self.port_lineEdit_3.text())
        print("Update: %s", self.port_lineEdit_4.text())
        # pass
        # Clear the screen
        self.Port_Scan_Result.setText("\nPlease wait, scanning remote host" + self.host_lineEdit_2.text())


    # Start - Tab 4 - FUNCTION (update_port_scan)
    ##################################################

    ##################################################
    # Start - Tab 5 - FUNCTION (UNKNOWN)



    # Start - Tab 5 - FUNCTION (UNKNOWN)
    ##################################################

    ##################################################
    # Start - Tab 6 - FUNCTION (UNKNOWN)



    # Start - Tab 6 - FUNCTION (UNKNOWN)
    ##################################################


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())
